{"version":3,"sources":["components/Header/Header.js","components/Main/TodoList/Todo/Todo.js","shapes/TodoShape.js","components/Main/TodoList/TodoList.js","components/Input/Input.js","api/categories.js","components/Select/Select.js","components/Main/NewTodoForm/NewTodoForm.js","api/todos.js","components/Main/Main.js","App.js","index.js"],"names":["Header","className","id","viewBox","d","type","Todo","PropTypes","shape","number","isRequired","title","string","completed","bool","category","classNames","readOnly","value","TodoList","todos","map","todo","Input","name","onChange","placeholder","htmlFor","categories","Select","NewTodoForm","addTodo","useState","setCategory","setTitle","titleError","setTitleError","categoryError","setCategoryError","onSubmit","event","preventDefault","trim","target","Main","initialTodos","setTodos","newTodoValues","newTodo","length","current","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12f038be.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\nexport function Header() {\n  return (\n    <header className=\"Header\">\n      <svg\n        className=\"Header__logo\"\n        id=\"icon-logo-leaf\"\n        viewBox=\"0 0 364 604\"\n      >\n        <title>logo</title>\n        {/* eslint-disable-next-line max-len */}\n        <path d=\"M181.9,23.1c0,0,64.6,50.5,111.6,126.9l-85.2,223.2L108.1,98.6h-1C145.3,51.8,181.9,23.1,181.9,23.1z M22.2,302  c0-57.9,22.6-111.7,50.7-156.3l110.2,293.1l-40.5,106.1C95.3,497.1,22.2,406.4,22.2,302z M182.1,580.8l141.5-371  c11.1,28.8,18.2,59.8,18.2,92.2C341.6,454.1,186.1,577.7,182.1,580.8z\" />\n      </svg>\n      <button type=\"button\" className=\"Header__btn Header__btn--dark\">\n        switch&nbsp;\n        <span>DARK</span>\n      </button>\n    </header>\n  );\n}\n","import React from 'react';\nimport classNames from 'classnames/bind';\nimport { TodoShape } from '../../../../shapes/TodoShape';\n\nimport './Todo.scss';\n\nexport const Todo = ({ title, completed, category }) => (\n  <div\n    className={classNames(\n      'Todo',\n      {\n        'Todo--checked': completed,\n        'Todo--unchecked': !completed,\n      },\n    )}\n  >\n    <label className=\"Todo__checkbox-label\">\n      <input className=\"Todo__checkbox\" type=\"checkbox\" readOnly />\n      <span />\n    </label>\n\n    <label className=\"Todo__title-label\">\n      <input className=\"Todo__title\" type=\"text\" value={title} />\n    </label>\n\n    <span className=\"Todo__category\">\n      {category}\n    </span>\n\n    <button\n      className=\"Todo__delete-btn\"\n      type=\"button\"\n    >\n      X\n    </button>\n  </div>\n);\n\nTodo.propTypes = TodoShape;\n","import PropTypes from 'prop-types';\n\nexport const TodoShape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  category: PropTypes.string.isRequired,\n}).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport { TodoShape } from '../../../shapes/TodoShape';\nimport { Todo } from './Todo/Todo';\n\nexport const TodoList = ({ todos }) => (\n  <ul className=\"list\">\n    {\n      todos.map(todo => (\n        <li\n          className={\n            classNames('list__item item', { 'item--completed': todo.completed })\n          }\n          key={todo.id}\n        >\n          <Todo {...todo} />\n        </li>\n      ))\n    }\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(TodoShape).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Input = ({ name, value, onChange, placeholder, className }) => (\n  <label htmlFor={name} className={`${className}-label`}>\n    <input\n      type=\"text\"\n      name={name}\n      id={name}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n      className={className}\n    />\n  </label>\n);\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","export const categories = ['education', 'health', 'fun'];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { categories } from '../../api/categories';\n\nexport const Select = ({ name, value, onChange, className }) => (\n  <label htmlFor={name}>\n    <select\n      name={name}\n      id={name}\n      value={value}\n      onChange={onChange}\n      className={className}\n    >\n      <option value=\"\">\n        Choose category\n      </option>\n      {categories.map(category => (\n        <option value={category} key={category}>\n          {category}\n        </option>\n      ))}\n    </select>\n  </label>\n);\n\nSelect.propTypes = {\n  name: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from '../../Input/Input';\nimport { Select } from '../../Select/Select';\n\nimport './NewTodoForm.scss';\n\nexport const NewTodoForm = ({ addTodo }) => {\n  const [category, setCategory] = useState('');\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [categoryError, setCategoryError] = useState(false);\n\n  const handleChangeInput = ({ target }) => {\n    setTitle(target.value);\n    setTitleError(false);\n  };\n\n  const handleChangeSelector = ({ target }) => {\n    setCategory(target.value);\n    setCategoryError(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (!title.trim()) {\n      setTitleError(true);\n\n      return;\n    }\n\n    if (!category) {\n      setCategoryError(true);\n\n      return;\n    }\n\n    addTodo({\n      title,\n      category,\n    });\n\n    setCategory('');\n    setTitle('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"NewTodoForm\">\n        <Input\n          className=\"NewTodoForm__input\"\n          value={title}\n          name=\"title\"\n          placeholder=\"Enter new task\"\n          onChange={handleChangeInput}\n        />\n        <Select\n          className=\"NewTodoForm__select\"\n          value={category}\n          name=\"category\"\n          onChange={handleChangeSelector}\n        />\n        <button type=\"submit\" className=\"NewTodoForm__btn\">\n          +\n        </button>\n      </form>\n      {titleError && <span>Please enter the title</span>}\n      {categoryError && <span>Please choose the category</span>}\n    </>\n  );\n};\n\nNewTodoForm.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n","const todos = [\n  {\n    id: 1,\n    title: 'learn TypeScript',\n    category: 'education',\n    completed: true,\n  },\n  {\n    id: 2,\n    category: 'health',\n    title: 'provide a blood test',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React, { useState } from 'react';\nimport { TodoList } from './TodoList/TodoList';\nimport { NewTodoForm } from './NewTodoForm/NewTodoForm';\nimport initialTodos from '../../api/todos';\n\nexport const Main = () => {\n  const [todos, setTodos] = useState(initialTodos);\n\n  const addTodo = (newTodoValues) => {\n    const newTodo = {\n      ...newTodoValues,\n      id: todos.length + 1,\n      completed: false,\n    };\n\n    setTodos(current => [...current, newTodo]);\n  };\n\n  return (\n    <main className=\"Main\">\n      <NewTodoForm\n        addTodo={addTodo}\n      />\n      {!!todos.length && (\n        <TodoList todos={todos} />\n      )}\n    </main>\n  );\n};\n","import React from 'react';\nimport { Header } from './components/Header/Header';\nimport { Main } from './components/Main/Main';\nimport './App.css';\nimport './styles/general.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}